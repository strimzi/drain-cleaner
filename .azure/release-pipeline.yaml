# Triggers
trigger: none
pr: none

# Parameters
parameters:
- name: releaseVersion
  displayName: Release Version
  type: string
- name: useSuffix
  displayName: Build suffixed images
  type: boolean
  default: true
- name: releaseSuffix
  displayName: Release Suffix
  type: number
- name: sourcePipelineId
  displayName: Pipeline ID of the source build
  type: number
  default: 36
  values:
  - 36
- name: sourceBuildId
  displayName: Build ID of the source build
  type: number

# Stages
stages:
  - stage: release_artifacts
    displayName: Release artifacts for ${{ parameters.releaseVersion }}
    condition: startsWith(variables['build.sourceBranch'], 'refs/heads/release-')
    jobs:
      - job: 'release_artifacts'
        displayName: 'Release Artifacts'
        strategy:
          matrix:
            'java-17':
              image: 'Ubuntu-20.04'
              jdk_version: '17'
              jdk_path: '/usr/lib/jvm/java-17-openjdk-amd64'
        # Set timeout for jobs
        timeoutInMinutes: 60
        # Base system
        pool:
          vmImage: 'Ubuntu-20.04'
        # Pipeline steps
        steps:
          - template: 'templates/steps/setup_java.yaml'
            parameters:
              JDK_PATH: $(jdk_path)
              JDK_VERSION: $(jdk_version)
          - bash: ".azure/scripts/release-artifacts.sh"
            env:
              BUILD_REASON: $(Build.Reason)
              BRANCH: $(Build.SourceBranch)
              RELEASE_VERSION: '${{ parameters.releaseVersion }}'
              MVN_ARGS: '-B'
            displayName: "Prepare release artifacts"
          - publish: $(System.DefaultWorkingDirectory)/strimzi-drain-cleaner-${{ parameters.releaseVersion }}.tar.gz
            artifact: ReleaseTarGzArchive
          - publish: $(System.DefaultWorkingDirectory)/strimzi-drain-cleaner-${{ parameters.releaseVersion }}.zip
            artifact: ReleaseZipArchive
          - publish: $(System.DefaultWorkingDirectory)/strimzi-drain-cleaner-helm-3-chart-${{ parameters.releaseVersion }}.tgz
            artifact: HelmChartArchive
  - stage: containers_publish_with_suffix
    displayName: Publish Containers for ${{ parameters.releaseVersion }}-${{ parameters.releaseSuffix }}
    dependsOn: 
      - release_artifacts
    condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/heads/release-'), eq('${{ parameters.useSuffix }}', 'true'))
    jobs:
      - template: 'templates/jobs/push_container.yaml'
        parameters:
          dockerTag: '${{ parameters.releaseVersion }}-${{ parameters.releaseSuffix }}'
          artifactSource: 'specific'
          artifactProject: 'strimzi'
          artifactPipeline: '${{ parameters.sourcePipelineId }}'
          artifactRunVersion: 'specific'
          artifactRunId: '${{ parameters.sourceBuildId }}'
          architectures: ['amd64', 'arm64', 's390x', 'ppc64le']
  - stage: containers_publish
    displayName: Publish Containers for ${{ parameters.releaseVersion }}
    dependsOn: 
      - release_artifacts
      - containers_publish_with_suffix
    condition: and(in(dependencies.containers_publish_with_suffix.result, 'Succeeded', 'SucceededWithIssues', 'Skipped'), startsWith(variables['build.sourceBranch'], 'refs/heads/release-'))
    jobs:
      - template: 'templates/jobs/push_container.yaml'
        parameters:
          dockerTag: '${{ parameters.releaseVersion }}'
          artifactSource: 'specific'
          artifactProject: 'strimzi'
          artifactPipeline: '${{ parameters.sourcePipelineId }}'
          artifactRunVersion: 'specific'
          artifactRunId: '${{ parameters.sourceBuildId }}'
          architectures: ['amd64', 'arm64', 's390x', 'ppc64le']
