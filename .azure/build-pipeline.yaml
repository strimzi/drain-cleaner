# Triggers
trigger:
  branches:
    include:
      - 'main'
      - 'release-*'
pr:
  autoCancel: true
  branches:
    include:
      - '*'

# Stages
stages:
  - stage: java_build
    displayName: Java
    jobs:
      - job: 'build_and_test_java'
        displayName: 'Build & Test'
        # Strategy for the job
        strategy:
          matrix:
            'java-11':
              image: 'Ubuntu-18.04'
              jdk_version: '11'
              jdk_path: '/usr/lib/jvm/java-11-openjdk-amd64'
        # Set timeout for jobs
        timeoutInMinutes: 60
        # Base system
        pool:
          vmImage: $(image)
        # Variables
        variables:
          MVN_CACHE_FOLDER: $(HOME)/.m2/repository
          MVN_ARGS: '-e -V -B'
        # Pipeline steps
        steps:
          - task: Cache@2
            inputs:
              key: 'mvn-m2-cache | $(System.JobName)'
              path: "$(MVN_CACHE_FOLDER)"
            displayName: Maven cache
          - template: 'templates/steps/setup_java.yaml'
            parameters:
              JDK_PATH: $(jdk_path)
              JDK_VERSION: $(jdk_version)
          - bash: ".azure/scripts/java-build.sh"
            env:
              BUILD_REASON: $(Build.Reason)
              BRANCH: $(Build.SourceBranch)
              MVN_ARGS: "-B -Dquarkus.native.container-build=true"
            displayName: "Build & Test Java"
          # We have to TAR the target directory to maintain the permissions of 
          # the files which would otherwise change when downloading the artifact
          - bash: tar -cvpf target.tar ./target
            displayName: "Tar the target directory"
          - publish: $(System.DefaultWorkingDirectory)/target.tar
            artifact: Binary
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: JUnit
              testResultsFiles: '**/TEST-*.xml'
              testRunTitle: "Unit & Integration tests"
            condition: always()
  - stage: container_build
    displayName: Prepare Container
    dependsOn: 
      - java_build
    jobs:
      - template: 'templates/jobs/build_container.yaml'
        parameters:
          artifactSource: 'current'
          artifactProject: 'strimzi'
          artifactPipeline: ''
          artifactRunVersion: ''
          artifactRunId: ''
  - stage: run_systemtest
    displayName: Run Systemtests
    dependsOn:
      - container_build
    condition: succeeded()
    variables:
      docker_org: strimzi
      docker_registry: localhost:5000
    jobs:
      - template: 'templates/jobs/run_systemtests.yaml'
  - stage: container_publish
    displayName: Publish Container
    dependsOn: 
      - container_build
      - run_systemtest
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
    jobs:
      - template: 'templates/jobs/push_container.yaml'
        parameters:
          dockerTag: 'latest'
          artifactSource: 'current'
          artifactProject: 'strimzi'
          artifactPipeline: ''
          artifactRunVersion: ''
          artifactRunId: ''
