jobs:
  - job: 'push_helm_chart_oci'
    displayName: 'Push Helm Chart as OCI artifact'
    # Set timeout for jobs
    timeoutInMinutes: 60
    # Base system
    pool:
      vmImage: 'Ubuntu-22.04'
    # Pipeline steps
    steps:
      # Install Prerequisites
      - template: "../steps/prerequisites/install_helm.yaml"

      # Unpack the release artifacts
      - task: DownloadPipelineArtifact@2
        inputs:
          source: '${{ parameters.artifactSource }}'
          artifact: HelmChartArchive
          path: $(System.DefaultWorkingDirectory)/
          project: '${{ parameters.artifactProject }}'
          pipeline: '${{ parameters.artifactPipeline }}'
          runVersion: '${{ parameters.artifactRunVersion }}'
          runId: '${{ parameters.artifactRunId }}'

      # Login Helm to the OCI Registry
      - bash: "helm registry login -u $DOCKER_USER -p $DOCKER_PASS $DOCKER_REGISTRY"
        displayName: "Login to OCI registry"
        env:
          DOCKER_USER: $(QUAY_HELM_USER)
          DOCKER_PASS: $(QUAY_HELM_PASS)
          DOCKER_REGISTRY: "quay.io"

      # Push the Helm Chart to the OCI Registry
      - bash: "helm push strimzi-drain-cleaner-helm-3-chart-${{ parameters.releaseVersion }}.tgz oci://$DOCKER_REGISTRY/$DOCKER_ORG"
        displayName: "Push Helm Chart OCI artifact"
        env:
          DOCKER_REGISTRY: "quay.io"
          DOCKER_ORG: "strimzi-helm"