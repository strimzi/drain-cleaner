jobs:
  - job: 'run_systemtest'
    displayName: "Run systemtests"
    strategy:
      matrix:
        ${{ each arch in parameters.architectures }}:
          ${{ arch }}:
            arch: ${{ arch }}
            image: 'Ubuntu-22.04'
            jdk_version: '17'
    pool:
      vmImage: $(image)
    variables:
      - template: '../steps/default_variables.yaml'
    timeoutInMinutes: 30
    steps:
      - template: '../steps/prerequisites/install_java.yaml'
        parameters:
          JDK_VERSION: $(jdk_version)
      - template: "../steps/prerequisites/install_docker.yaml"
      - template: "../steps/prerequisites/install_kind.yaml"
      - task: DownloadPipelineArtifact@2
        inputs:
          source: current
          artifact: Container-$(arch)
          path: $(System.DefaultWorkingDirectory)
      - script: |
          echo "##vso[task.setvariable variable=docker_registry]$(hostname --ip-address | grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' | awk '$1 != "127.0.0.1" { print $1 }' | head -1):5001"
        displayName: "Set docker_registry to local registry"
        condition: eq(variables['docker_registry'], 'localhost:5000')
      - bash: |
          eval $(minikube docker-env)
          DOCKER_ARCHITECTURE=$(arch) make docker_load
          make docker_tag
          make docker_push
        env:
          BUILD_TAG: latest-$(arch)
        displayName: 'Docker load & tag & push to local registries - $(arch)'
      - task: Maven@4
        inputs:
          mavenPOMFile: 'pom.xml'
          publishJUnitResults: true
          goals: 'verify'
          options: '-B -Psystemtest'
        env:
          DOCKER_ORG: $(docker_org)
          DOCKER_TAG: $(docker_tag)
          TEST_LOG_DIR: $(test_log_dir)
        displayName: 'Run systemtests - $(arch) - Bundle installation'
      - task: Maven@4
        inputs:
          mavenPOMFile: 'pom.xml'
          publishJUnitResults: true
          goals: 'verify'
          options: '-B -Psystemtest'
        env:
          DOCKER_ORG: $(docker_org)
          DOCKER_TAG: $(docker_tag)
          DC_INSTALL_TYPE: Helm
          TEST_LOG_DIR: $(test_log_dir)
        displayName: 'Run systemtests - $(arch) - Helm installation'
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(test_log_dir)
          artifactName: systemtest-logs
        displayName: 'Publish logs from failed tests'
        condition: failed()